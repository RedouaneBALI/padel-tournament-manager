-- Flyway V1 â€” Application schema only (no flyway_schema_history here)

-- ===== Tables =====

CREATE TABLE IF NOT EXISTS match_format (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    advantage BOOLEAN NOT NULL,
    number_of_sets_to_win INTEGER NOT NULL CHECK (number_of_sets_to_win >= 1),
    points_per_set INTEGER NOT NULL CHECK (points_per_set >= 1),
    super_tie_break_in_final_set BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS player (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255),
    birth_year INTEGER,
    points INTEGER,
    ranking INTEGER
);

CREATE TABLE IF NOT EXISTS score (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
);

CREATE TABLE IF NOT EXISTS set_score (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_index INTEGER,
    teamascore INTEGER NOT NULL,
    teambscore INTEGER NOT NULL,
    tie_break_teama INTEGER,
    tie_break_teamb INTEGER,
    score_id BIGINT REFERENCES score(id)
);

CREATE TABLE IF NOT EXISTS tournament (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    owner_id VARCHAR(191) NOT NULL,
    created_at TIMESTAMPTZ NOT NULL,
    updated_at TIMESTAMPTZ NOT NULL,

    name VARCHAR(255),
    description VARCHAR(255),
    city VARCHAR(255),
    club VARCHAR(255),

    gender SMALLINT CHECK (gender >= 0 AND gender <= 2),
    level SMALLINT CHECK (level >= 0 AND level <= 7),
    tournament_format SMALLINT CHECK (tournament_format >= 0 AND tournament_format <= 2),

    nb_seeds INTEGER NOT NULL,
    start_date DATE,
    end_date DATE,
    nb_max_pairs INTEGER NOT NULL,

    -- JSON-like text handled by AttributeConverter
    format_config TEXT
);

CREATE INDEX IF NOT EXISTS idx_tournament_owner ON tournament(owner_id);

CREATE TABLE IF NOT EXISTS round (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_index INTEGER,
    match_format_id BIGINT UNIQUE REFERENCES match_format(id),
    tournament_id BIGINT REFERENCES tournament(id),
    stage VARCHAR(255) CHECK (
      (stage)::text = ANY ((ARRAY['GROUPS'::varchar, 'Q1'::varchar, 'Q2'::varchar, 'R64'::varchar, 'R32'::varchar, 'R16'::varchar, 'QUARTERS'::varchar, 'SEMIS'::varchar, 'FINAL'::varchar, 'WINNER'::varchar])::text[])
    )
);

CREATE TABLE IF NOT EXISTS pool_ranking (
    id BIGINT PRIMARY KEY
);

CREATE SEQUENCE IF NOT EXISTS pool_ranking_seq START WITH 1 INCREMENT BY 50 NO MINVALUE NO MAXVALUE CACHE 1;

CREATE TABLE IF NOT EXISTS pool (
    id BIGINT PRIMARY KEY,
    pool_ranking_id BIGINT UNIQUE REFERENCES pool_ranking(id),
    round_id BIGINT REFERENCES round(id),
    name VARCHAR(255)
);

CREATE SEQUENCE IF NOT EXISTS pool_seq START WITH 1 INCREMENT BY 50 NO MINVALUE NO MAXVALUE CACHE 1;

CREATE TABLE IF NOT EXISTS player_pair (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_index INTEGER,
    seed INTEGER NOT NULL,
    player1_id BIGINT REFERENCES player(id),
    player2_id BIGINT REFERENCES player(id),
    pool_id BIGINT REFERENCES pool(id),
    tournament_id BIGINT REFERENCES tournament(id)
);

CREATE TABLE IF NOT EXISTS pool_ranking_details (
    id BIGINT PRIMARY KEY,
    order_index INTEGER,
    points INTEGER NOT NULL,
    set_average INTEGER NOT NULL,
    player_pair_id BIGINT REFERENCES player_pair(id),
    pool_ranking_id BIGINT REFERENCES pool_ranking(id)
);

CREATE SEQUENCE IF NOT EXISTS pool_ranking_details_seq START WITH 1 INCREMENT BY 50 NO MINVALUE NO MAXVALUE CACHE 1;

CREATE TABLE IF NOT EXISTS game (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_index INTEGER,
    scheduled_time TIME(6) WITHOUT TIME ZONE,
    winner_side SMALLINT CHECK (winner_side >= 0 AND winner_side <= 1),
    format_id BIGINT REFERENCES match_format(id),
    pool_id BIGINT REFERENCES pool(id),
    round_id BIGINT REFERENCES round(id),
    score_id BIGINT UNIQUE REFERENCES score(id),
    teama_id BIGINT REFERENCES player_pair(id),
    teamb_id BIGINT REFERENCES player_pair(id),
    court VARCHAR(255)
);

-- End V1